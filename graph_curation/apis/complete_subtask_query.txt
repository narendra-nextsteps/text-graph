LET concept_key = "magnetism"
LET chapter_key = "1202662"

LET curated_concept = (
    UPDATE { _key: concept_key } WITH {
        locked_to: NULL
    } IN CurationConcepts
    RETURN NEW
)[0]

LET pending_sub_task = (
    FOR sub_task IN SubTasks
        FILTER sub_task.concept_key == concept_key AND sub_task.status == "PENDING"
        RETURN sub_task
)[0]

LET num_pending_sub_tasks = (
    FOR sub_task in SubTasks
        FILTER sub_task.task_key == pending_sub_task.task_key AND sub_task.status == 'PENDING'
        COLLECT WITH COUNT INTO num_pending_sub_tasks
        RETURN num_pending_sub_tasks
)[0]

LET completed_sub_task = (
    UPDATE pending_sub_task WITH {
        status: "COMPLETED", completed_time: DATE_ISO8601(DATE_NOW())
    } IN SubTasks
    RETURN NEW
)[0]


LET is_task_completed = num_pending_sub_tasks == 1

LET completed_task = (
    FILTER is_task_completed
    UPDATE { _key: pending_sub_task.task_key } WITH {
        status: "COMPLETED", completed_time: DATE_ISO8601(DATE_NOW())
    } IN Tasks
    RETURN NEW
)[0]

LET updated_chapter = (
    FILTER is_task_completed
    UPDATE { _key: completed_task.chapter_key } WITH {
        locked_to: NULL
    } In Chapters
    RETURN NEW
)[0]

RETURN {
    curated_concept: curated_concept,
    completed_sub_task: completed_sub_task,
    is_task_completed: is_task_completed,
    completed_task: completed_task,
    updated_chapter: updated_chapter
}


// Use completed_task to call next query

LET completed_task = {
    "_key": "2204291",
    "_id": "Tasks/2204291",
    "_rev": "_XCekYMq--_",
    "status": "COMPLETED",
    "assigned_to": "a",
    "assigned_by": "A",
    "chapter_key": "1202662",
    "assigned_time": "2018-06-28T14:34:11.538Z",
    "completed_time": "2018-06-28T20:47:14.155Z"
}

LET next_user_task = (
    FOR task IN Tasks
        FILTER task.chapter_key == completed_task.chapter_key AND task.status == 'NOT_YET_ASSIGNED'
        SORT task._key
        LIMIT 1
        RETURN task
)[0]

LET need_to_create_subtasks = !IS_NULL(next_user_task)

LET updated_next_user_task = (
    FILTER need_to_create_subtasks
    UPDATE next_user_task WITH { status: 'PENDING' } IN Tasks
    RETURN NEW
)[0]

LET updated_chapter = (
    FILTER need_to_create_subtasks
    UPDATE { _key: completed_task.chapter_key } WITH {
        locked_to: updated_next_user_task.assigned_to
    } In Chapters
    RETURN NEW
)[0]

LET newly_locked_concepts = (
    FILTER need_to_create_subtasks
    FOR concept_doc in CurationConcepts
        FILTER POSITION(concept_doc.chapter_keys, completed_task.chapter_key) AND IS_NULL(concept_doc.locked_to)
        UPDATE concept_doc WITH {
            locked_to: updated_next_user_task.assigned_to
        } IN CurationConcepts
        RETURN {
            key: concept_doc._key,
            name: concept_doc.concept_name
            assigned_to: updated_next_user_task.assigned_to
        }
)

LET next_user_sub_tasks = (
    FILTER need_to_create_subtasks
    FOR concept in newly_locked_concepts
        INSERT {
            task_key: next_user_task._key,
            concept_key: concept.key,
            concept_name: concept.name,
            status: 'PENDING',
            assigned_time: DATE_ISO8601(DATE_NOW())
        } IN SubTasks
        RETURN NEW
)

RETURN {
    updated_next_user_task: updated_next_user_task,
    updated_chapter: updated_chapter,
    need_to_create_subtasks: need_to_create_subtasks,
    next_user_sub_tasks: next_user_sub_tasks,
    newly_locked_concepts: newly_locked_concepts
}




















LET chapter_key = "1202662"
LET assigned_to_list = [ "a", "b", "c" ]
LET assigned_by = "A"
LET num_one_less_assigned_to = LENGTH(assigned_to_list)

LET doc = DOCUMENT("Chapters/1202662")
LET is_previously_locked = !IS_NULL(doc.locked_to)

LET tasks = (
    FOR assigned_to_pos in 0..num_one_less_assigned_to
    FILTER assigned_to_list[assigned_to_pos] != doc.locked_to
    INSERT {
        'status': assigned_to_pos == 0 ? (is_previously_locked ? 'NOT_YET_ASSIGNED' : 'PENDING') : 'NOT_YET_ASSIGNED',
        'assigned_to': assigned_to_list[assigned_to_pos],
        'assigned_by': assigned_by,
        'chapter_key': chapter_key,
        'assigned_time':DATE_ISO8601(DATE_NOW())
    } IN Tasks
    RETURN NEW
)

LET updated_doc = (
    IS_NULL(doc.locked_to) ? (
        FILTER IS_NULL(doc.locked_to)
        UPDATE doc WITH {
            'locked_to': assigned_to_list[0]
        } IN Chapters
        RETURN NEW
    ) : doc
)

LET concepts = (
    FOR concept_doc in CurationConcepts
        FILTER POSITION(concept_doc.chapter_keys, chapter_key) and IS_NULL(concept_doc.locked_to)
        RETURN {
            key: concept_doc._key,
            name: concept_doc.concept_name
        }
)

LET need_to_create_subtasks = tasks[0].status == 'PENDING'

LET sub_tasks = (
    FILTER need_to_create_subtasks
    FOR concept in concepts
        INSERT {
            task_key: tasks[0]._key,
            concept_key: concept.key,
            concept_name: concept.name,
            status: 'PENDING'
        } IN SubTasks
        RETURN NEW
)


LET locked_concepts = (
    FILTER need_to_create_subtasks
    FOR concept in concepts
        UPDATE {
            _key: concept.key
        } WITH {
            locked_to: assigned_to_list[0]
        } IN CurationConcepts
        RETURN {
            concept_key: concept.key,
            assigned_to: assigned_to_list[0]
        }
)

RETURN {
    'is_previously_locked': is_previously_locked,
    'tasks': tasks,
    'sub_tasks': sub_tasks,
    'locked_concepts': locked_concepts
}
